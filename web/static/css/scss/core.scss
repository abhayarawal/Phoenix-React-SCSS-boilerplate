/* css foundation */
html {
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}
body {
    margin: 0;
    font: 16px/1 sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
}
h1,
h2,
h3,
h4,
p,
blockquote,
figure,
ol,
ul {
    margin: 0;
    padding: 0;
}
main,
li {
    display: block;
}
h1,
h2,
h3,
h4 {
    font-size: inherit;
}
strong {
    font-weight: bold;
}
a,
button {
    color: inherit;
    transition: .3s;
}
a {
    text-decoration: none;
}
button {
    overflow: visible;
    border: 0;
    font: inherit;
    -webkit-font-smoothing: inherit;
    letter-spacing: inherit;
    background: none;
    cursor: pointer;
}
::-moz-focus-inner {
    padding: 0;
    border: 0;
}
:focus {
    outline: 0;
}
img {
    max-width: 100%;
    height: auto;
    border: 0;
}

/* grid system */
$wrapper: 1200px;
$gutter: 1rem;

@mixin row($inside: false) {
	
	@if($inside == true)
	{
		margin-left: -$gutter/2;
		margin-right: -$gutter/2;
	}
	@else
	{
		width: 100%;
		max-width: $wrapper;
		margin-left: auto;
		margin-right: auto;
	}
	
	&:before, &:after
	{
		content: '';
		display: table;
	}
	
	&:after
	{
		clear: both;
	}
}

@mixin col($width: 1, $padding: true)
{
	float: left;
  width: percentage($width);
  
	@if($padding == true) 
	{
    padding-left: $gutter/2;
    padding-right: $gutter/2;
  }
}

@mixin push($width: 0) 
{
  position: relative;
  left: percentage($width);
}

@mixin pull($width: 0)
{
  position: relative;
  right: percentage($width);
}

/* Easy breakpoint mixin */
$brk_sm: 500px;
$brk_md: 768px;
$brk_lg: 992px;

@mixin mq($value) {
  @media only screen and (min-width: $value) {
    @content;
  }
}

/* hard reset */
html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

.row
{
	@include row(true);
}



/* layout */
html, body
{
	display: block;
	width: 100%;
	height: 100%;
	position: relative;
}

@mixin opacity($opacity)
{
	opacity: $opacity;
	filter: alpha(opacity=($opacity * 100));
}

@mixin font-size($size) {
	font-size:$size;
	font-size: ($size / 16px) * 1rem;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin box-shadow( $h: 10px , $v: 10px , $b: 0px , $s: 0px , $c: #000000 )
{
	-webkit-box-shadow: $h $v $b $s $c;
	-moz-box-shadow: $h $v $b $s $c;
	box-shadow: $h $v $b $s $c;
 }

/* styling */
$heading-font: 'Roboto', sans-serif;
$base-font: 'Roboto', sans-serif;
$font-size: 14px;

body
{
	font: 100%/1.6 $base-font; 
  margin: 0 auto; 
  text-align: left; 
	background: #ffffff;
	font-weight: 300;
	@include font-size($font-size);
}

strong
{
	font-weight: 400;
}

h1, h2, h3, h4, h5, h6
{
	font-family: $heading-font;
	letter-spacing: 0.4em;
}

h1 {font-size: 3.125em;}
h2 {font-size: 2.618em;}
h3 {font-size: 1.931em;}
h4 {font-size: 1.618;}
h5 {font-size: 1.194em;}
h6 {font-size: 1em;}

@media only screen and (min-width: 42em) {	
  h1 {font-size: 6.2em;}
  h2 {font-size: 4em;}
  h3 {font-size: 3.125em;}
  h4 {font-size: 2em;}
  h5 {font-size: 1.563em;}
  h6 {font-size: 1em;}
}